{
  "version": 3,
  "sources": ["../app/entry.server.tsx", "../app/shopify.server.ts", "../app/db.server.ts", "../app/root.tsx", "../app/routes/app.products.tsx", "../app/routes/app.try-on.tsx", "../app/routes/api.tryon.tsx", "../app/services/comfyui.server.ts", "../app/services/image.server.ts", "../app/routes/products.tsx", "../app/routes/webhooks.tsx", "../app/routes/_index.tsx", "../app/routes/try-on.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\nimport { addDocumentResponseHeaders } from \"./shopify.server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  addDocumentResponseHeaders(request, responseHeaders);\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}", "import \"@shopify/shopify-app-remix/adapters/node\";\nimport {\n  ApiVersion,\n  AppDistribution,\n  DeliveryMethod,\n  shopifyApp,\n  LATEST_API_VERSION,\n} from \"@shopify/shopify-app-remix/server\";\nimport { restResources } from \"@shopify/shopify-api/rest/admin/2024-01\";\nimport { SQLiteSessionStorage } from \"./db.server\";\n\n// For development without Shopify authentication\nconst isDevelopment = process.env.NODE_ENV !== \"production\";\n\nconst shopify = shopifyApp({\n  apiKey: process.env.SHOPIFY_API_KEY,\n  apiSecretKey: process.env.SHOPIFY_API_SECRET || \"\",\n  apiVersion: LATEST_API_VERSION,\n  scopes: process.env.SCOPES?.split(\",\"),\n  appUrl: process.env.SHOPIFY_APP_URL || (isDevelopment ? \"http://localhost:3000\" : \"\"),\n  authPathPrefix: \"/auth\",\n  sessionStorage: new SQLiteSessionStorage(),\n  distribution: AppDistribution.AppStore,\n  restResources,\n  // Skip authentication in development\n  ...(isDevelopment && {\n    isEmbeddedApp: false,\n  }),\n  webhooks: {\n    APP_UNINSTALLED: {\n      deliveryMethod: DeliveryMethod.Http,\n      callbackUrl: \"/webhooks\",\n    },\n  },\n  hooks: {\n    afterAuth: async ({ session }) => {\n      shopify.registerWebhooks({ session });\n    },\n  },\n  future: {\n    v3_webhookAdminContext: true,\n    v3_authenticatePublic: true,\n  },\n  ...(process.env.SHOP_CUSTOM_DOMAIN\n    ? { customShopDomains: [process.env.SHOP_CUSTOM_DOMAIN] }\n    : {}),\n});\n\nexport default shopify;\nexport const apiVersion = LATEST_API_VERSION;\nexport const addDocumentResponseHeaders = shopify.addDocumentResponseHeaders;\nexport const authenticate = shopify.authenticate;\nexport const unauthenticated = shopify.unauthenticated;\nexport const login = shopify.login;\nexport const registerWebhooks = shopify.registerWebhooks;\nexport const sessionStorage = shopify.sessionStorage;", "import Database from 'better-sqlite3';\nimport { join } from 'path';\n\nlet db: Database.Database;\n\n// Initialize database\nfunction getDatabase() {\n  if (!db) {\n    const dbPath = join(process.cwd(), 'app.db');\n    db = new Database(dbPath);\n    \n    // Enable WAL mode for better performance\n    db.pragma('journal_mode = WAL');\n    \n    // Create tables\n    createTables();\n  }\n  return db;\n}\n\nfunction createTables() {\n  // Sessions table for Shopify authentication\n  db.exec(`\n    CREATE TABLE IF NOT EXISTS sessions (\n      id TEXT PRIMARY KEY,\n      shop TEXT NOT NULL,\n      state TEXT NOT NULL,\n      isOnline INTEGER DEFAULT 0,\n      scope TEXT,\n      expires INTEGER,\n      accessToken TEXT NOT NULL,\n      userId INTEGER,\n      firstName TEXT,\n      lastName TEXT,\n      email TEXT,\n      accountOwner INTEGER DEFAULT 0,\n      locale TEXT,\n      collaborator INTEGER DEFAULT 0,\n      emailVerified INTEGER DEFAULT 0\n    )\n  `);\n\n  // TryOnResult table\n  db.exec(`\n    CREATE TABLE IF NOT EXISTS tryOnResults (\n      id TEXT PRIMARY KEY,\n      customerId TEXT,\n      productId TEXT NOT NULL,\n      variantId TEXT NOT NULL,\n      userPhoto TEXT NOT NULL,\n      resultImage TEXT DEFAULT '',\n      fitScore INTEGER DEFAULT 0,\n      pose TEXT NOT NULL,\n      jobId TEXT,\n      status TEXT DEFAULT 'pending',\n      processingTime INTEGER DEFAULT 0,\n      createdAt INTEGER DEFAULT (strftime('%s', 'now')),\n      updatedAt INTEGER DEFAULT (strftime('%s', 'now'))\n    )\n  `);\n\n  // ProductAIConfig table\n  db.exec(`\n    CREATE TABLE IF NOT EXISTS productAIConfigs (\n      id TEXT PRIMARY KEY,\n      productId TEXT UNIQUE NOT NULL,\n      aiOptimized INTEGER DEFAULT 0,\n      category TEXT,\n      tags TEXT,\n      createdAt INTEGER DEFAULT (strftime('%s', 'now')),\n      updatedAt INTEGER DEFAULT (strftime('%s', 'now'))\n    )\n  `);\n}\n\n// Session storage implementation for Shopify\nexport class SQLiteSessionStorage {\n  private db: Database.Database;\n\n  constructor() {\n    this.db = getDatabase();\n  }\n\n  async storeSession(session: any) {\n    const stmt = this.db.prepare(`\n      INSERT OR REPLACE INTO sessions \n      (id, shop, state, isOnline, scope, expires, accessToken, userId, firstName, lastName, email, accountOwner, locale, collaborator, emailVerified)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `);\n    \n    stmt.run(\n      session.id,\n      session.shop,\n      session.state,\n      session.isOnline ? 1 : 0,\n      session.scope,\n      session.expires ? Math.floor(session.expires.getTime() / 1000) : null,\n      session.accessToken,\n      session.userId,\n      session.firstName,\n      session.lastName,\n      session.email,\n      session.accountOwner ? 1 : 0,\n      session.locale,\n      session.collaborator ? 1 : 0,\n      session.emailVerified ? 1 : 0\n    );\n    \n    return true;\n  }\n\n  async loadSession(id: string) {\n    const stmt = this.db.prepare('SELECT * FROM sessions WHERE id = ?');\n    const row = stmt.get(id) as any;\n    \n    if (!row) return undefined;\n    \n    return {\n      id: row.id,\n      shop: row.shop,\n      state: row.state,\n      isOnline: Boolean(row.isOnline),\n      scope: row.scope,\n      expires: row.expires ? new Date(row.expires * 1000) : undefined,\n      accessToken: row.accessToken,\n      userId: row.userId,\n      firstName: row.firstName,\n      lastName: row.lastName,\n      email: row.email,\n      accountOwner: Boolean(row.accountOwner),\n      locale: row.locale,\n      collaborator: Boolean(row.collaborator),\n      emailVerified: Boolean(row.emailVerified)\n    };\n  }\n\n  async deleteSession(id: string) {\n    const stmt = this.db.prepare('DELETE FROM sessions WHERE id = ?');\n    stmt.run(id);\n    return true;\n  }\n\n  async deleteSessions(ids: string[]) {\n    const stmt = this.db.prepare('DELETE FROM sessions WHERE id = ?');\n    const deleteMany = this.db.transaction((ids: string[]) => {\n      for (const id of ids) stmt.run(id);\n    });\n    deleteMany(ids);\n    return true;\n  }\n\n  async findSessionsByShop(shop: string) {\n    const stmt = this.db.prepare('SELECT * FROM sessions WHERE shop = ?');\n    const rows = stmt.all(shop) as any[];\n    \n    return rows.map(row => ({\n      id: row.id,\n      shop: row.shop,\n      state: row.state,\n      isOnline: Boolean(row.isOnline),\n      scope: row.scope,\n      expires: row.expires ? new Date(row.expires * 1000) : undefined,\n      accessToken: row.accessToken,\n      userId: row.userId,\n      firstName: row.firstName,\n      lastName: row.lastName,\n      email: row.email,\n      accountOwner: Boolean(row.accountOwner),\n      locale: row.locale,\n      collaborator: Boolean(row.collaborator),\n      emailVerified: Boolean(row.emailVerified)\n    }));\n  }\n}\n\n// Database helper functions\nexport const database = {\n  // Try-on results\n  createTryOnResult: (data: {\n    customerId?: string;\n    productId: string;\n    variantId: string;\n    userPhoto: string;\n    resultImage?: string;\n    fitScore?: number;\n    pose: string;\n    jobId?: string;\n    status?: string;\n  }) => {\n    const db = getDatabase();\n    const id = `tryon_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const stmt = db.prepare(`\n      INSERT INTO tryOnResults (id, customerId, productId, variantId, userPhoto, resultImage, fitScore, pose, jobId, status)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `);\n    stmt.run(\n      id, \n      data.customerId, \n      data.productId, \n      data.variantId, \n      data.userPhoto, \n      data.resultImage || '', \n      data.fitScore || 0, \n      data.pose,\n      data.jobId || '',\n      data.status || 'pending'\n    );\n    return id;\n  },\n\n  updateTryOnResult: (id: string, data: {\n    resultImage?: string;\n    fitScore?: number;\n    status?: string;\n    processingTime?: number;\n  }) => {\n    const db = getDatabase();\n    const stmt = db.prepare(`\n      UPDATE tryOnResults \n      SET resultImage = COALESCE(?, resultImage),\n          fitScore = COALESCE(?, fitScore),\n          status = COALESCE(?, status),\n          processingTime = COALESCE(?, processingTime),\n          updatedAt = strftime('%s', 'now')\n      WHERE id = ?\n    `);\n    stmt.run(data.resultImage, data.fitScore, data.status, data.processingTime, id);\n    return id;\n  },\n\n  getTryOnResults: (customerId?: string) => {\n    const db = getDatabase();\n    const stmt = customerId \n      ? db.prepare('SELECT * FROM tryOnResults WHERE customerId = ? ORDER BY createdAt DESC')\n      : db.prepare('SELECT * FROM tryOnResults ORDER BY createdAt DESC');\n    return customerId ? stmt.all(customerId) : stmt.all();\n  },\n\n  // Product AI configs\n  createOrUpdateProductAIConfig: (data: {\n    productId: string;\n    aiOptimized: boolean;\n    category?: string;\n    tags?: string;\n  }) => {\n    const db = getDatabase();\n    const id = `config_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const stmt = db.prepare(`\n      INSERT OR REPLACE INTO productAIConfigs (id, productId, aiOptimized, category, tags, updatedAt)\n      VALUES (?, ?, ?, ?, ?, strftime('%s', 'now'))\n    `);\n    stmt.run(id, data.productId, data.aiOptimized ? 1 : 0, data.category, data.tags);\n    return id;\n  },\n\n  getProductAIConfig: (productId: string) => {\n    const db = getDatabase();\n    const stmt = db.prepare('SELECT * FROM productAIConfigs WHERE productId = ?');\n    const row = stmt.get(productId) as any;\n    if (!row) return null;\n    return {\n      ...row,\n      aiOptimized: Boolean(row.aiOptimized)\n    };\n  }\n};\n\nexport default getDatabase();", "import type { LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\n  return json({\n    message: \"ShootX AI Fashion Try-On App\"\n  });\n};\n\nexport default function App() {\n  return (\n    <html>\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n\nexport function ErrorBoundary() {\n  return (\n    <html>\n      <head>\n        <title>Error</title>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <div style={{ padding: '2rem', textAlign: 'center' }}>\n          <h1>Something went wrong</h1>\n          <p>Please try refreshing the page.</p>\n        </div>\n        <Scripts />\n      </body>\n    </html>\n  );\n}", "import type { LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport {\n  Page,\n  Layout,\n  Text,\n  Card,\n  Button,\n  BlockStack,\n  Box,\n  DataTable,\n  Badge,\n} from \"@shopify/polaris\";\nimport { TitleBar } from \"@shopify/app-bridge-react\";\nimport { authenticate } from \"../shopify.server\";\n\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\n  const { admin, session } = await authenticate.admin(request);\n\n  // Fetch products from Shopify\n  const response = await admin.graphql(\n    `#graphql\n      query getProducts($first: Int!) {\n        products(first: $first) {\n          nodes {\n            id\n            title\n            handle\n            status\n            totalInventory\n            createdAt\n            images(first: 1) {\n              nodes {\n                url\n                altText\n              }\n            }\n            variants(first: 1) {\n              nodes {\n                price\n              }\n            }\n          }\n        }\n      }`,\n    {\n      variables: {\n        first: 10,\n      },\n    }\n  );\n\n  const responseJson = await response.json();\n  const products = responseJson.data?.products?.nodes || [];\n\n  return json({\n    products,\n  });\n};\n\nexport default function Products() {\n  const { products } = useLoaderData<typeof loader>();\n\n  const rows = products.map((product: any) => [\n    product.title,\n    product.handle,\n    product.variants.nodes[0]?.price || \"N/A\",\n    product.totalInventory || 0,\n    <Badge key={product.id} tone=\"success\">\n      AI Ready\n    </Badge>,\n    <Button key={`edit-${product.id}`} size=\"slim\">\n      Configure AI\n    </Button>,\n  ]);\n\n  return (\n    <Page>\n      <TitleBar title=\"Product Management\" />\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <BlockStack gap=\"500\">\n              <BlockStack gap=\"200\">\n                <Text as=\"h2\" variant=\"headingMd\">\n                  AI Try-On Product Configuration\n                </Text>\n                <Text variant=\"bodyMd\" as=\"p\">\n                  Configure your products for AI virtual try-on functionality.\n                  Products need proper images and metadata for optimal AI processing.\n                </Text>\n              </BlockStack>\n              \n              {products.length > 0 ? (\n                <DataTable\n                  columnContentTypes={['text', 'text', 'text', 'numeric', 'text', 'text']}\n                  headings={['Product', 'Handle', 'Price', 'Inventory', 'AI Status', 'Actions']}\n                  rows={rows}\n                />\n              ) : (\n                <Box padding=\"400\">\n                  <BlockStack gap=\"200\" align=\"center\">\n                    <Text as=\"p\" variant=\"bodyMd\">\n                      No products found. Create some products in your Shopify admin first.\n                    </Text>\n                    <Button\n                      url={`https://${process.env.SHOP_DOMAIN || 'your-shop'}.myshopify.com/admin/products`}\n                      target=\"_blank\"\n                    >\n                      Go to Products\n                    </Button>\n                  </BlockStack>\n                </Box>\n              )}\n            </BlockStack>\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}", "import type { LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, useFetcher } from \"@remix-run/react\";\nimport { useState, useCallback, useRef } from \"react\";\nimport {\n  Page,\n  Layout,\n  Text,\n  Card,\n  Button,\n  BlockStack,\n  Box,\n  InlineStack,\n  Badge,\n  DropZone,\n  Thumbnail,\n  Select,\n  Spinner,\n  Banner,\n} from \"@shopify/polaris\";\nimport { TitleBar } from \"@shopify/app-bridge-react\";\nimport { authenticate } from \"../shopify.server\";\n\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\n  const { admin, session } = await authenticate.admin(request);\n\n  // Fetch products for try-on selection\n  const response = await admin.graphql(\n    `#graphql\n      query getProducts($first: Int!) {\n        products(first: $first) {\n          nodes {\n            id\n            title\n            handle\n            images(first: 1) {\n              nodes {\n                url\n                altText\n              }\n            }\n            variants(first: 5) {\n              nodes {\n                id\n                title\n                image {\n                  url\n                }\n              }\n            }\n          }\n        }\n      }`,\n    {\n      variables: {\n        first: 20,\n      },\n    }\n  );\n\n  const responseJson = await response.json();\n  const products = responseJson.data?.products?.nodes || [];\n\n  return json({\n    shop: session.shop,\n    products,\n  });\n};\n\nexport default function TryOnStudio() {\n  const { shop, products } = useLoaderData<typeof loader>();\n  const fetcher = useFetcher();\n  \n  // Component state\n  const [selectedProduct, setSelectedProduct] = useState<string>('');\n  const [selectedVariant, setSelectedVariant] = useState<string>('');\n  const [modelImage, setModelImage] = useState<File | null>(null);\n  const [modelImagePreview, setModelImagePreview] = useState<string>('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [jobId, setJobId] = useState<string>('');\n  const [tryOnResult, setTryOnResult] = useState<string>('');\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Get selected product data\n  const selectedProductData = products.find((p: any) => p.id === selectedProduct);\n  const variantOptions = selectedProductData?.variants.nodes.map((variant: any) => ({\n    label: variant.title,\n    value: variant.id,\n  })) || [];\n\n  // Product selection options\n  const productOptions = [\n    { label: 'Select a product...', value: '' },\n    ...products.map((product: any) => ({\n      label: product.title,\n      value: product.id,\n    })),\n  ];\n\n  // Handle model image upload\n  const handleModelImageDrop = useCallback((files: File[]) => {\n    const file = files[0];\n    if (file && file.type.startsWith('image/')) {\n      setModelImage(file);\n      \n      // Create preview\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setModelImagePreview(e.target?.result as string);\n      };\n      reader.readAsDataURL(file);\n    }\n  }, []);\n\n  // Convert file to base64\n  const fileToBase64 = (file: File): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result as string);\n      reader.onerror = error => reject(error);\n    });\n  };\n\n  // Submit try-on request\n  const handleTryOnSubmit = async () => {\n    if (!modelImage || !selectedProduct || !selectedVariant) {\n      return;\n    }\n\n    setIsProcessing(true);\n    \n    try {\n      // Convert image to base64\n      const base64Image = await fileToBase64(modelImage);\n      \n      // Extract product and variant IDs (remove GraphQL prefixes)\n      const productId = selectedProduct.replace('gid://shopify/Product/', '');\n      const variantId = selectedVariant.replace('gid://shopify/ProductVariant/', '');\n      \n      // Submit to API\n      const formData = new FormData();\n      formData.append('modelImage', base64Image);\n      formData.append('productId', productId);\n      formData.append('variantId', variantId);\n      formData.append('customerId', 'demo-customer'); // TODO: Get actual customer ID\n      \n      fetcher.submit(formData, {\n        method: 'POST',\n        action: '/api/tryon',\n      });\n      \n    } catch (error) {\n      console.error('Try-on submission failed:', error);\n      setIsProcessing(false);\n    }\n  };\n\n  // Handle fetcher response\n  if (fetcher.data && fetcher.state === 'idle') {\n    if (fetcher.data.success && jobId !== fetcher.data.jobId) {\n      setJobId(fetcher.data.jobId);\n      // TODO: Start polling for results after deployment\n    }\n    if (isProcessing) {\n      setIsProcessing(false);\n    }\n  }\n\n  return (\n    <Page>\n      <TitleBar title=\"AI Try-On Studio\" />\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <BlockStack gap=\"500\">\n              <BlockStack gap=\"200\">\n                <Text as=\"h2\" variant=\"headingMd\">\n                  \uD83C\uDFAF AI Virtual Try-On Studio\n                </Text>\n                <Text variant=\"bodyMd\" as=\"p\">\n                  Upload a model image and select a product to see how it looks with our \n                  ComfyUI-powered AI try-on technology running on RunPod.\n                </Text>\n              </BlockStack>\n              \n              <InlineStack gap=\"300\">\n                <Badge tone=\"info\">\n                  \uD83E\uDD16 ComfyUI Workflow\n                </Badge>\n                <Badge tone=\"success\">\n                  \u26A1 RunPod Processing\n                </Badge>\n                <Badge tone=\"attention\">\n                  \uD83C\uDFA8 High Quality Results\n                </Badge>\n              </InlineStack>\n\n              {/* Product Selection */}\n              <BlockStack gap=\"300\">\n                <Text as=\"h3\" variant=\"headingMd\">\n                  1. Select Product & Variant\n                </Text>\n                <Select\n                  label=\"Choose Product\"\n                  options={productOptions}\n                  value={selectedProduct}\n                  onChange={setSelectedProduct}\n                />\n                {variantOptions.length > 0 && (\n                  <Select\n                    label=\"Choose Variant\"\n                    options={[\n                      { label: 'Select variant...', value: '' },\n                      ...variantOptions,\n                    ]}\n                    value={selectedVariant}\n                    onChange={setSelectedVariant}\n                  />\n                )}\n              </BlockStack>\n\n              {/* Model Image Upload */}\n              <BlockStack gap=\"300\">\n                <Text as=\"h3\" variant=\"headingMd\">\n                  2. Upload Model Image\n                </Text>\n                <DropZone onDrop={handleModelImageDrop} accept=\"image/*\">\n                  {modelImagePreview ? (\n                    <Box padding=\"400\">\n                      <BlockStack gap=\"200\" align=\"center\">\n                        <Thumbnail\n                          source={modelImagePreview}\n                          alt=\"Model preview\"\n                          size=\"large\"\n                        />\n                        <Text variant=\"bodyMd\">\n                          Model image uploaded successfully\n                        </Text>\n                        <Button onClick={() => {\n                          setModelImage(null);\n                          setModelImagePreview('');\n                        }}>\n                          Remove Image\n                        </Button>\n                      </BlockStack>\n                    </Box>\n                  ) : (\n                    <DropZone.FileUpload />\n                  )}\n                </DropZone>\n                <Text variant=\"bodyMd\" tone=\"subdued\">\n                  Upload a clear photo of a person for best try-on results. \n                  Recommended: front-facing pose, good lighting, minimal background.\n                </Text>\n              </BlockStack>\n\n              {/* Try-On Action */}\n              <BlockStack gap=\"300\">\n                <Text as=\"h3\" variant=\"headingMd\">\n                  3. Generate Try-On\n                </Text>\n                <InlineStack gap=\"200\">\n                  <Button\n                    variant=\"primary\"\n                    onClick={handleTryOnSubmit}\n                    disabled={!modelImage || !selectedProduct || !selectedVariant || isProcessing}\n                    loading={isProcessing}\n                  >\n                    {isProcessing ? 'Processing...' : 'Generate Try-On'}\n                  </Button>\n                  {jobId && (\n                    <Text variant=\"bodyMd\" tone=\"subdued\">\n                      Job ID: {jobId}\n                    </Text>\n                  )}\n                </InlineStack>\n              </BlockStack>\n\n              {/* Status Messages */}\n              {fetcher.data?.error && (\n                <Banner tone=\"critical\">\n                  <Text variant=\"bodyMd\">\n                    Error: {fetcher.data.error}\n                  </Text>\n                </Banner>\n              )}\n\n              {jobId && (\n                <Banner tone=\"info\">\n                  <BlockStack gap=\"200\">\n                    <Text variant=\"bodyMd\">\n                      \uD83D\uDE80 Try-on job submitted successfully! \n                    </Text>\n                    <Text variant=\"bodyMd\" tone=\"subdued\">\n                      The ComfyUI workflow is processing your request on RunPod. \n                      Results will appear here when ready.\n                    </Text>\n                    {/* TODO: Add result polling and display after deployment */}\n                  </BlockStack>\n                </Banner>\n              )}\n\n            </BlockStack>\n          </Card>\n        </Layout.Section>\n        \n        {/* Technical Info Sidebar */}\n        <Layout.Section variant=\"oneThird\">\n          <Card>\n            <BlockStack gap=\"300\">\n              <Text as=\"h3\" variant=\"headingMd\">\n                \uD83D\uDD27 Technical Setup\n              </Text>\n              <BlockStack gap=\"200\">\n                <Text variant=\"bodyMd\">\n                  <strong>AI Engine:</strong> ComfyUI Workflow\n                </Text>\n                <Text variant=\"bodyMd\">\n                  <strong>Processing:</strong> RunPod GPU Instances\n                </Text>\n                <Text variant=\"bodyMd\">\n                  <strong>Workflow:</strong> Automatic dress fetching from product page\n                </Text>\n                <Text variant=\"bodyMd\">\n                  <strong>Input:</strong> User model image only\n                </Text>\n              </BlockStack>\n              \n              <Text as=\"h4\" variant=\"headingSm\">\n                \uD83D\uDCCB Setup Checklist (Post-Deployment)\n              </Text>\n              <Box>\n                <ul style={{ paddingLeft: '20px', fontSize: '14px' }}>\n                  <li>Configure RunPod API endpoint</li>\n                  <li>Set ComfyUI workflow ID</li>\n                  <li>Add API keys to environment</li>\n                  <li>Test image processing pipeline</li>\n                  <li>Enable result polling system</li>\n                </ul>\n              </Box>\n            </BlockStack>\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}", "/**\n * AI Try-On API Route\n * \n * Handles the complete try-on workflow:\n * 1. Receives user model image upload\n * 2. Fetches product dress image from Shopify\n * 3. Submits both to ComfyUI workflow on RunPod\n * 4. Returns job ID for status tracking\n */\n\nimport type { ActionFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { authenticate } from \"../shopify.server\";\nimport { comfyUIService } from \"../services/comfyui.server\";\nimport { imageService } from \"../services/image.server\";\nimport { database } from \"../db.server\";\n\nexport const action = async ({ request }: ActionFunctionArgs) => {\n  // Authenticate the request\n  const { admin, session } = await authenticate.admin(request);\n\n  if (request.method !== \"POST\") {\n    return json({ error: \"Method not allowed\" }, { status: 405 });\n  }\n\n  try {\n    const formData = await request.formData();\n    const modelImage = formData.get(\"modelImage\") as string;\n    const productId = formData.get(\"productId\") as string;\n    const variantId = formData.get(\"variantId\") as string;\n    const customerId = formData.get(\"customerId\") as string;\n\n    // Validate required fields\n    if (!modelImage || !productId || !variantId) {\n      return json({ \n        error: \"Missing required fields: modelImage, productId, variantId\" \n      }, { status: 400 });\n    }\n\n    // Fetch product information from Shopify\n    const productResponse = await admin.graphql(\n      `#graphql\n        query getProduct($id: ID!) {\n          product(id: $id) {\n            id\n            title\n            images(first: 1) {\n              nodes {\n                url\n                altText\n              }\n            }\n            variants(first: 10) {\n              nodes {\n                id\n                title\n                image {\n                  url\n                }\n              }\n            }\n          }\n        }`,\n      {\n        variables: {\n          id: `gid://shopify/Product/${productId}`,\n        },\n      }\n    );\n\n    const productData = await productResponse.json();\n    const product = productData.data?.product;\n\n    if (!product) {\n      return json({ error: \"Product not found\" }, { status: 404 });\n    }\n\n    // Get the specific variant or use the first available image\n    let garmentImageUrl = product.images.nodes[0]?.url;\n    \n    // Try to get variant-specific image\n    const variant = product.variants.nodes.find((v: any) => \n      v.id === `gid://shopify/ProductVariant/${variantId}`\n    );\n    \n    if (variant?.image?.url) {\n      garmentImageUrl = variant.image.url;\n    }\n\n    if (!garmentImageUrl) {\n      return json({ error: \"No product image found\" }, { status: 400 });\n    }\n\n    // Process images for ComfyUI workflow\n    const processedModelImage = await imageService.processModelImage(modelImage);\n    const garmentImageBase64 = await imageService.fetchProductImageAsBase64(\n      imageService.getOptimizedShopifyImageUrl(garmentImageUrl, 1024, 1024)\n    );\n\n    // Submit to ComfyUI workflow on RunPod\n    const workflowResult = await comfyUIService.submitTryOnJob({\n      modelImage: processedModelImage,\n      garmentImage: garmentImageBase64,\n      productId,\n      variantId,\n    });\n\n    if (!workflowResult.success) {\n      return json({ \n        error: \"Failed to submit try-on job\", \n        details: workflowResult.error \n      }, { status: 500 });\n    }\n\n    // Store the try-on request in database for tracking\n    const tryOnId = database.createTryOnResult({\n      customerId,\n      productId,\n      variantId,\n      userPhoto: modelImage, // Store original upload\n      resultImage: '', // Will be updated when job completes\n      fitScore: 0, // Will be calculated after processing\n      pose: 'front', // Default pose\n    });\n\n    return json({\n      success: true,\n      jobId: workflowResult.jobId,\n      tryOnId,\n      status: workflowResult.status,\n      message: \"Try-on job submitted successfully\",\n    });\n\n  } catch (error) {\n    console.error(\"Try-on API error:\", error);\n    return json({ \n      error: \"Internal server error\", \n      details: error instanceof Error ? error.message : \"Unknown error\" \n    }, { status: 500 });\n  }\n};\n\n/**\n * Get try-on job status\n * Used for polling the ComfyUI workflow progress\n */\nexport const loader = async ({ request }: ActionFunctionArgs) => {\n  const { admin, session } = await authenticate.admin(request);\n  \n  const url = new URL(request.url);\n  const jobId = url.searchParams.get(\"jobId\");\n  const tryOnId = url.searchParams.get(\"tryOnId\");\n\n  if (!jobId) {\n    return json({ error: \"Job ID required\" }, { status: 400 });\n  }\n\n  try {\n    // Check job status from ComfyUI/RunPod\n    const statusResult = await comfyUIService.checkJobStatus(jobId);\n\n    // If job is completed, update database with result\n    if (statusResult.status === 'completed' && statusResult.resultImage && tryOnId) {\n      // TODO: Update database with result image after deployment\n      // database.updateTryOnResult(tryOnId, {\n      //   resultImage: statusResult.resultImage,\n      //   fitScore: calculateFitScore(statusResult.resultImage), // Implement scoring\n      // });\n    }\n\n    return json({\n      success: statusResult.success,\n      status: statusResult.status,\n      resultImage: statusResult.resultImage,\n      processingTime: statusResult.processingTime,\n      error: statusResult.error,\n    });\n\n  } catch (error) {\n    console.error(\"Status check error:\", error);\n    return json({ \n      error: \"Failed to check job status\" \n    }, { status: 500 });\n  }\n};", "/**\n * ComfyUI Workflow Service for AI Try-On\n * \n * This service handles the integration with ComfyUI workflow running on RunPod\n * for AI-powered virtual try-on functionality.\n * \n * Workflow:\n * 1. User uploads model image\n * 2. Product dress image is automatically fetched from Shopify\n * 3. Both images are sent to ComfyUI workflow on RunPod\n * 4. AI generates try-on result\n * 5. Result is returned and stored\n */\n\nexport interface ComfyUIWorkflowRequest {\n  modelImage: string; // Base64 encoded user model image\n  garmentImage: string; // Base64 encoded product dress image\n  productId: string;\n  variantId: string;\n  workflowId?: string; // ComfyUI workflow identifier\n}\n\nexport interface ComfyUIWorkflowResponse {\n  success: boolean;\n  resultImage?: string; // Base64 encoded result image\n  jobId?: string;\n  status: 'queued' | 'processing' | 'completed' | 'failed';\n  error?: string;\n  processingTime?: number;\n}\n\nexport class ComfyUIService {\n  private runpodApiKey: string;\n  private runpodEndpoint: string;\n  private workflowId: string;\n\n  constructor() {\n    // TODO: Add these to environment variables after deployment\n    this.runpodApiKey = process.env.RUNPOD_API_KEY || '';\n    this.runpodEndpoint = process.env.RUNPOD_ENDPOINT || '';\n    this.workflowId = process.env.COMFYUI_WORKFLOW_ID || 'default-tryon-workflow';\n  }\n\n  /**\n   * Submit try-on job to ComfyUI workflow on RunPod\n   * \n   * @param request - Contains model image, garment image, and product info\n   * @returns Promise with job submission result\n   */\n  async submitTryOnJob(request: ComfyUIWorkflowRequest): Promise<ComfyUIWorkflowResponse> {\n    try {\n      // TODO: Replace with actual RunPod API endpoint after deployment\n      const response = await fetch(`${this.runpodEndpoint}/run`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.runpodApiKey}`,\n        },\n        body: JSON.stringify({\n          input: {\n            workflow_id: request.workflowId || this.workflowId,\n            model_image: request.modelImage,\n            garment_image: request.garmentImage,\n            product_id: request.productId,\n            variant_id: request.variantId,\n            // ComfyUI workflow parameters\n            workflow_params: {\n              strength: 0.8, // Try-on strength\n              guidance_scale: 7.5,\n              num_inference_steps: 20,\n              seed: -1, // Random seed\n            }\n          }\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`RunPod API error: ${response.status} ${response.statusText}`);\n      }\n\n      const result = await response.json();\n      \n      return {\n        success: true,\n        jobId: result.id,\n        status: 'queued',\n      };\n\n    } catch (error) {\n      console.error('ComfyUI workflow submission failed:', error);\n      return {\n        success: false,\n        status: 'failed',\n        error: error instanceof Error ? error.message : 'Unknown error',\n      };\n    }\n  }\n\n  /**\n   * Check the status of a running ComfyUI job\n   * \n   * @param jobId - The job ID returned from submitTryOnJob\n   * @returns Promise with current job status and result if completed\n   */\n  async checkJobStatus(jobId: string): Promise<ComfyUIWorkflowResponse> {\n    try {\n      // TODO: Replace with actual RunPod status endpoint after deployment\n      const response = await fetch(`${this.runpodEndpoint}/status/${jobId}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${this.runpodApiKey}`,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`RunPod status check failed: ${response.status}`);\n      }\n\n      const result = await response.json();\n      \n      return {\n        success: true,\n        jobId: jobId,\n        status: result.status,\n        resultImage: result.output?.result_image,\n        processingTime: result.execution_time,\n      };\n\n    } catch (error) {\n      console.error('Job status check failed:', error);\n      return {\n        success: false,\n        status: 'failed',\n        error: error instanceof Error ? error.message : 'Status check failed',\n      };\n    }\n  }\n\n  /**\n   * Cancel a running ComfyUI job\n   * \n   * @param jobId - The job ID to cancel\n   * @returns Promise with cancellation result\n   */\n  async cancelJob(jobId: string): Promise<{ success: boolean; error?: string }> {\n    try {\n      // TODO: Implement job cancellation after deployment\n      const response = await fetch(`${this.runpodEndpoint}/cancel/${jobId}`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${this.runpodApiKey}`,\n        },\n      });\n\n      return { success: response.ok };\n    } catch (error) {\n      return { \n        success: false, \n        error: error instanceof Error ? error.message : 'Cancellation failed' \n      };\n    }\n  }\n\n  /**\n   * Validate that the ComfyUI service is available\n   * \n   * @returns Promise with service health status\n   */\n  async healthCheck(): Promise<{ healthy: boolean; error?: string }> {\n    try {\n      // TODO: Implement health check endpoint after deployment\n      const response = await fetch(`${this.runpodEndpoint}/health`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${this.runpodApiKey}`,\n        },\n      });\n\n      return { healthy: response.ok };\n    } catch (error) {\n      return { \n        healthy: false, \n        error: error instanceof Error ? error.message : 'Health check failed' \n      };\n    }\n  }\n}\n\n// Singleton instance\nexport const comfyUIService = new ComfyUIService();", "/**\n * Image Processing Service\n * \n * Handles image operations for the AI try-on workflow:\n * - Fetching product images from Shopify\n * - Processing user uploaded model images\n * - Image format conversion and validation\n * - Base64 encoding for ComfyUI workflow\n */\n\nexport interface ImageProcessingOptions {\n  maxWidth?: number;\n  maxHeight?: number;\n  quality?: number;\n  format?: 'jpeg' | 'png' | 'webp';\n}\n\nexport class ImageService {\n  /**\n   * Fetch product image from Shopify and convert to base64\n   * This automatically gets the dress image from the product page\n   * \n   * @param imageUrl - Shopify product image URL\n   * @param options - Image processing options\n   * @returns Promise with base64 encoded image\n   */\n  async fetchProductImageAsBase64(\n    imageUrl: string, \n    options: ImageProcessingOptions = {}\n  ): Promise<string> {\n    try {\n      // Fetch the image from Shopify CDN\n      const response = await fetch(imageUrl);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch product image: ${response.status}`);\n      }\n\n      const imageBuffer = await response.arrayBuffer();\n      const base64Image = Buffer.from(imageBuffer).toString('base64');\n      \n      // TODO: Add image processing/resizing after deployment if needed\n      // For now, return the raw base64 image\n      return base64Image;\n\n    } catch (error) {\n      console.error('Product image fetch failed:', error);\n      throw new Error('Failed to process product image');\n    }\n  }\n\n  /**\n   * Process user uploaded model image\n   * Validates and converts the uploaded image to the format needed by ComfyUI\n   * \n   * @param imageData - Base64 or buffer data from user upload\n   * @param options - Processing options\n   * @returns Promise with processed base64 image\n   */\n  async processModelImage(\n    imageData: string | Buffer, \n    options: ImageProcessingOptions = {}\n  ): Promise<string> {\n    try {\n      let base64Image: string;\n\n      if (typeof imageData === 'string') {\n        // Remove data URL prefix if present\n        base64Image = imageData.replace(/^data:image\\/[a-z]+;base64,/, '');\n      } else {\n        base64Image = imageData.toString('base64');\n      }\n\n      // TODO: Add image validation and processing after deployment\n      // - Check image dimensions\n      // - Resize if needed\n      // - Validate file format\n      // - Apply any preprocessing for ComfyUI workflow\n\n      return base64Image;\n\n    } catch (error) {\n      console.error('Model image processing failed:', error);\n      throw new Error('Failed to process model image');\n    }\n  }\n\n  /**\n   * Validate image format and size\n   * \n   * @param base64Image - Base64 encoded image\n   * @returns Validation result with image info\n   */\n  validateImage(base64Image: string): {\n    valid: boolean;\n    format?: string;\n    size?: number;\n    error?: string;\n  } {\n    try {\n      // Basic validation - check if it's valid base64\n      const buffer = Buffer.from(base64Image, 'base64');\n      \n      // TODO: Add more sophisticated validation after deployment\n      // - Check image headers for format\n      // - Validate dimensions\n      // - Check file size limits\n      \n      return {\n        valid: true,\n        size: buffer.length,\n      };\n\n    } catch (error) {\n      return {\n        valid: false,\n        error: 'Invalid image format',\n      };\n    }\n  }\n\n  /**\n   * Get optimized image URL from Shopify\n   * Shopify provides image transformation parameters\n   * \n   * @param originalUrl - Original Shopify image URL\n   * @param width - Desired width\n   * @param height - Desired height\n   * @returns Optimized image URL\n   */\n  getOptimizedShopifyImageUrl(\n    originalUrl: string, \n    width: number = 1024, \n    height: number = 1024\n  ): string {\n    // Shopify image transformation format\n    // TODO: Adjust dimensions based on ComfyUI workflow requirements after deployment\n    const transformedUrl = originalUrl.replace(\n      /\\.(jpg|jpeg|png|webp)/i, \n      `_${width}x${height}.$1`\n    );\n    \n    return transformedUrl;\n  }\n}\n\n// Singleton instance\nexport const imageService = new ImageService();", "import { Link } from \"@remix-run/react\";\n\nexport default function Products() {\n  // Mock products for demo\n  const products = [\n    { \n      id: '1', \n      title: 'Summer Dress - Blue', \n      price: '$89.99',\n      image: 'https://images.pexels.com/photos/1536619/pexels-photo-1536619.jpeg?auto=compress&cs=tinysrgb&w=400',\n      aiReady: true\n    },\n    { \n      id: '2', \n      title: 'Evening Gown - Black', \n      price: '$159.99',\n      image: 'https://images.pexels.com/photos/1043474/pexels-photo-1043474.jpeg?auto=compress&cs=tinysrgb&w=400',\n      aiReady: true\n    },\n    { \n      id: '3', \n      title: 'Casual Dress - Red', \n      price: '$69.99',\n      image: 'https://images.pexels.com/photos/1381556/pexels-photo-1381556.jpeg?auto=compress&cs=tinysrgb&w=400',\n      aiReady: false\n    },\n    { \n      id: '4', \n      title: 'Floral Maxi Dress', \n      price: '$119.99',\n      image: 'https://images.pexels.com/photos/1462637/pexels-photo-1462637.jpeg?auto=compress&cs=tinysrgb&w=400',\n      aiReady: true\n    },\n  ];\n\n  return (\n    <div style={{ \n      minHeight: '100vh', \n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n      padding: '2rem'\n    }}>\n      <div style={{\n        maxWidth: '1200px',\n        margin: '0 auto',\n        background: 'white',\n        borderRadius: '20px',\n        padding: '2rem',\n        boxShadow: '0 20px 40px rgba(0,0,0,0.1)'\n      }}>\n        <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n          <Link to=\"/\" style={{ \n            color: '#667eea', \n            textDecoration: 'none',\n            fontSize: '1rem',\n            marginBottom: '1rem',\n            display: 'inline-block'\n          }}>\n            \u2190 Back to Home\n          </Link>\n          <h1 style={{\n            fontSize: '2.5rem',\n            background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            marginBottom: '0.5rem'\n          }}>\n            \uD83D\uDCE6 Product Management\n          </h1>\n          <p style={{ color: '#666', fontSize: '1.1rem' }}>\n            Configure your products for AI virtual try-on functionality\n          </p>\n        </div>\n\n        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '2rem' }}>\n          {products.map((product) => (\n            <div\n              key={product.id}\n              style={{\n                border: '2px solid #eee',\n                borderRadius: '15px',\n                padding: '1.5rem',\n                background: 'white',\n                boxShadow: '0 5px 15px rgba(0,0,0,0.08)',\n                transition: 'transform 0.2s'\n              }}\n              onMouseOver={(e) => e.currentTarget.style.transform = 'translateY(-5px)'}\n              onMouseOut={(e) => e.currentTarget.style.transform = 'translateY(0)'}\n            >\n              <img \n                src={product.image} \n                alt={product.title}\n                style={{\n                  width: '100%',\n                  height: '200px',\n                  objectFit: 'cover',\n                  borderRadius: '10px',\n                  marginBottom: '1rem'\n                }}\n              />\n              <h3 style={{ margin: '0 0 0.5rem 0', color: '#333' }}>{product.title}</h3>\n              <p style={{ margin: '0 0 1rem 0', color: '#667eea', fontSize: '1.2rem', fontWeight: 'bold' }}>\n                {product.price}\n              </p>\n              \n              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '1rem' }}>\n                <span style={{\n                  padding: '0.3rem 0.8rem',\n                  borderRadius: '20px',\n                  fontSize: '0.8rem',\n                  fontWeight: 'bold',\n                  background: product.aiReady ? '#e8f5e8' : '#fff3cd',\n                  color: product.aiReady ? '#2d5a2d' : '#856404'\n                }}>\n                  {product.aiReady ? '\u2705 AI Ready' : '\u26A0\uFE0F Setup Required'}\n                </span>\n              </div>\n\n              <div style={{ display: 'flex', gap: '0.5rem' }}>\n                <button\n                  style={{\n                    flex: 1,\n                    background: product.aiReady ? 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' : '#ccc',\n                    color: 'white',\n                    border: 'none',\n                    padding: '0.8rem',\n                    borderRadius: '8px',\n                    fontSize: '0.9rem',\n                    fontWeight: 'bold',\n                    cursor: product.aiReady ? 'pointer' : 'not-allowed'\n                  }}\n                  disabled={!product.aiReady}\n                >\n                  {product.aiReady ? '\uD83C\uDFAF Try-On Ready' : '\uD83D\uDD27 Configure AI'}\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Setup Instructions */}\n        <div style={{\n          marginTop: '3rem',\n          padding: '2rem',\n          background: '#f8f9ff',\n          borderRadius: '15px'\n        }}>\n          <h3 style={{ color: '#333', marginBottom: '1rem' }}>\uD83D\uDD27 AI Try-On Setup Instructions</h3>\n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '1rem' }}>\n            <div style={{ padding: '1rem', background: 'white', borderRadius: '10px' }}>\n              <h4 style={{ color: '#667eea', margin: '0 0 0.5rem 0' }}>1. ComfyUI Workflow</h4>\n              <p style={{ margin: 0, fontSize: '0.9rem', color: '#666' }}>\n                Configure your ComfyUI workflow ID and parameters for optimal try-on results\n              </p>\n            </div>\n            <div style={{ padding: '1rem', background: 'white', borderRadius: '10px' }}>\n              <h4 style={{ color: '#667eea', margin: '0 0 0.5rem 0' }}>2. RunPod API</h4>\n              <p style={{ margin: 0, fontSize: '0.9rem', color: '#666' }}>\n                Set up RunPod endpoint and API keys for GPU-powered processing\n              </p>\n            </div>\n            <div style={{ padding: '1rem', background: 'white', borderRadius: '10px' }}>\n              <h4 style={{ color: '#667eea', margin: '0 0 0.5rem 0' }}>3. Image Quality</h4>\n              <p style={{ margin: 0, fontSize: '0.9rem', color: '#666' }}>\n                Ensure product images are high-resolution with clean backgrounds\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}", "import type { ActionFunctionArgs } from \"@remix-run/node\";\nimport { authenticate } from \"../shopify.server\";\nimport db from \"../db.server\";\n\nexport const action = async ({ request }: ActionFunctionArgs) => {\n  const { topic, shop, session, admin, payload } = await authenticate.webhook(\n    request\n  );\n\n  if (!admin) {\n    // The admin context isn't returned if the webhook fired after a shop was uninstalled.\n    throw new Response();\n  }\n\n  switch (topic) {\n    case \"APP_UNINSTALLED\":\n      if (session) {\n        await db.session.deleteMany({ where: { shop } });\n      }\n\n      break;\n    case \"CUSTOMERS_DATA_REQUEST\":\n    case \"CUSTOMERS_REDACT\":\n    case \"SHOP_REDACT\":\n    default:\n      throw new Response(\"Unhandled webhook topic\", { status: 404 });\n  }\n\n  throw new Response();\n};", "import { json } from \"@remix-run/node\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\n\nexport const loader = async () => {\n  // Simple loader for WebContainer environment\n  return json({\n    message: \"ShootX AI Fashion Try-On App\",\n    environment: \"development\"\n  });\n};\n\nexport default function Index() {\n  const { message } = useLoaderData<typeof loader>();\n\n  return (\n    <div style={{ \n      minHeight: '100vh', \n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n      padding: '2rem',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\n    }}>\n      <div style={{\n        maxWidth: '1200px',\n        margin: '0 auto',\n        background: 'white',\n        borderRadius: '20px',\n        padding: '3rem',\n        boxShadow: '0 20px 40px rgba(0,0,0,0.1)'\n      }}>\n        {/* Header */}\n        <div style={{ textAlign: 'center', marginBottom: '3rem' }}>\n          <div style={{\n            fontSize: '3rem',\n            fontWeight: 'bold',\n            background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            marginBottom: '1rem'\n          }}>\n            \uD83C\uDFAF ShootX\n          </div>\n          <h1 style={{\n            fontSize: '2.5rem',\n            color: '#333',\n            marginBottom: '1rem',\n            fontWeight: '600'\n          }}>\n            AI Fashion Try-On for Shopify\n          </h1>\n          <p style={{ \n            color: '#666', \n            fontSize: '1.2rem',\n            maxWidth: '600px',\n            margin: '0 auto',\n            lineHeight: '1.6'\n          }}>\n            Revolutionary ComfyUI-powered virtual try-on technology running on RunPod. \n            Upload your photo, select any dress, and see instant AI-generated results.\n          </p>\n        </div>\n\n        {/* Features Grid */}\n        <div style={{ \n          display: 'grid', \n          gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', \n          gap: '2rem',\n          marginBottom: '3rem'\n        }}>\n          <div style={{\n            padding: '2rem',\n            background: '#f8f9ff',\n            borderRadius: '15px',\n            textAlign: 'center'\n          }}>\n            <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>\uD83E\uDD16</div>\n            <h3 style={{ color: '#333', marginBottom: '1rem' }}>ComfyUI Workflow</h3>\n            <p style={{ color: '#666', lineHeight: '1.6' }}>\n              Advanced AI processing with ComfyUI workflows optimized for fashion try-on scenarios\n            </p>\n          </div>\n          \n          <div style={{\n            padding: '2rem',\n            background: '#f0fff4',\n            borderRadius: '15px',\n            textAlign: 'center'\n          }}>\n            <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>\u26A1</div>\n            <h3 style={{ color: '#333', marginBottom: '1rem' }}>RunPod Processing</h3>\n            <p style={{ color: '#666', lineHeight: '1.6' }}>\n              High-performance GPU processing on RunPod for fast, high-quality results\n            </p>\n          </div>\n          \n          <div style={{\n            padding: '2rem',\n            background: '#fff5f5',\n            borderRadius: '15px',\n            textAlign: 'center'\n          }}>\n            <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>\uD83C\uDFA8</div>\n            <h3 style={{ color: '#333', marginBottom: '1rem' }}>Auto Dress Fetch</h3>\n            <p style={{ color: '#666', lineHeight: '1.6' }}>\n              Automatically fetches dress images from product pages - users only upload their photo\n            </p>\n          </div>\n        </div>\n\n        {/* Navigation Buttons */}\n        <div style={{ \n          display: 'flex', \n          gap: '1rem', \n          justifyContent: 'center',\n          flexWrap: 'wrap'\n        }}>\n          <Link \n            to=\"/app/try-on\"\n            style={{\n              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n              color: 'white',\n              padding: '1rem 2rem',\n              borderRadius: '50px',\n              textDecoration: 'none',\n              fontSize: '1.1rem',\n              fontWeight: 'bold',\n              boxShadow: '0 10px 20px rgba(102, 126, 234, 0.3)',\n              transition: 'transform 0.2s'\n            }}\n            onMouseOver={(e) => e.currentTarget.style.transform = 'translateY(-2px)'}\n            onMouseOut={(e) => e.currentTarget.style.transform = 'translateY(0)'}\n          >\n            \uD83D\uDE80 Try-On Studio\n          </Link>\n          \n          <Link \n            to=\"/app/products\"\n            style={{\n              background: 'white',\n              color: '#667eea',\n              border: '2px solid #667eea',\n              padding: '1rem 2rem',\n              borderRadius: '50px',\n              textDecoration: 'none',\n              fontSize: '1.1rem',\n              fontWeight: 'bold',\n              transition: 'all 0.2s'\n            }}\n            onMouseOver={(e) => {\n              e.currentTarget.style.background = '#667eea';\n              e.currentTarget.style.color = 'white';\n            }}\n            onMouseOut={(e) => {\n              e.currentTarget.style.background = 'white';\n              e.currentTarget.style.color = '#667eea';\n            }}\n          >\n            \uD83D\uDCE6 Manage Products\n          </Link>\n        </div>\n\n        {/* Technical Info */}\n        <div style={{\n          marginTop: '3rem',\n          padding: '2rem',\n          background: '#f8f9fa',\n          borderRadius: '15px'\n        }}>\n          <h3 style={{ color: '#333', marginBottom: '1rem', textAlign: 'center' }}>\n            \uD83D\uDD27 Ready for RunPod Integration\n          </h3>\n          <div style={{ \n            display: 'grid', \n            gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', \n            gap: '1rem',\n            fontSize: '0.9rem',\n            color: '#666'\n          }}>\n            <div>\n              <strong>\u2705 ComfyUI Service:</strong> Pre-configured for workflow submission\n            </div>\n            <div>\n              <strong>\u2705 Image Processing:</strong> Automatic product image fetching\n            </div>\n            <div>\n              <strong>\u2705 API Routes:</strong> Ready for RunPod endpoint integration\n            </div>\n            <div>\n              <strong>\u2705 Database:</strong> Job tracking and result storage\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}", "import { useState, useCallback, useRef } from \"react\";\nimport { Link } from \"@remix-run/react\";\n\nexport default function TryOnStudio() {\n  const [selectedProduct, setSelectedProduct] = useState<string>('');\n  const [modelImage, setModelImage] = useState<File | null>(null);\n  const [modelImagePreview, setModelImagePreview] = useState<string>('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [jobId, setJobId] = useState<string>('');\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Mock products for demo\n  const products = [\n    { id: '1', title: 'Summer Dress - Blue', image: 'https://images.pexels.com/photos/1536619/pexels-photo-1536619.jpeg?auto=compress&cs=tinysrgb&w=400' },\n    { id: '2', title: 'Evening Gown - Black', image: 'https://images.pexels.com/photos/1043474/pexels-photo-1043474.jpeg?auto=compress&cs=tinysrgb&w=400' },\n    { id: '3', title: 'Casual Dress - Red', image: 'https://images.pexels.com/photos/1381556/pexels-photo-1381556.jpeg?auto=compress&cs=tinysrgb&w=400' },\n  ];\n\n  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file && file.type.startsWith('image/')) {\n      setModelImage(file);\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setModelImagePreview(e.target?.result as string);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleTryOnSubmit = async () => {\n    if (!modelImage || !selectedProduct) return;\n    \n    setIsProcessing(true);\n    setJobId(`job_${Date.now()}`);\n    \n    // Simulate processing\n    setTimeout(() => {\n      setIsProcessing(false);\n    }, 3000);\n  };\n\n  return (\n    <div style={{ \n      minHeight: '100vh', \n      background: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',\n      padding: '2rem'\n    }}>\n      <div style={{\n        maxWidth: '1200px',\n        margin: '0 auto',\n        background: 'white',\n        borderRadius: '20px',\n        padding: '2rem',\n        boxShadow: '0 20px 40px rgba(0,0,0,0.1)'\n      }}>\n        <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n          <Link to=\"/\" style={{ \n            color: '#f5576c', \n            textDecoration: 'none',\n            fontSize: '1rem',\n            marginBottom: '1rem',\n            display: 'inline-block'\n          }}>\n            \u2190 Back to Home\n          </Link>\n          <h1 style={{\n            fontSize: '2.5rem',\n            background: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            marginBottom: '0.5rem'\n          }}>\n            \uD83C\uDFAF AI Try-On Studio\n          </h1>\n          <p style={{ color: '#666', fontSize: '1.1rem' }}>\n            Upload your photo and select a dress to see how it looks with ComfyUI AI\n          </p>\n        </div>\n\n        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '2rem', alignItems: 'start' }}>\n          {/* Left Column - Product Selection */}\n          <div>\n            <h3 style={{ marginBottom: '1rem', color: '#333' }}>1. Select a Dress</h3>\n            <div style={{ display: 'grid', gap: '1rem' }}>\n              {products.map((product) => (\n                <div\n                  key={product.id}\n                  onClick={() => setSelectedProduct(product.id)}\n                  style={{\n                    border: selectedProduct === product.id ? '3px solid #f5576c' : '2px solid #eee',\n                    borderRadius: '10px',\n                    padding: '1rem',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '1rem',\n                    transition: 'all 0.2s',\n                    background: selectedProduct === product.id ? '#fff5f5' : 'white'\n                  }}\n                >\n                  <img \n                    src={product.image} \n                    alt={product.title}\n                    style={{\n                      width: '80px',\n                      height: '80px',\n                      objectFit: 'cover',\n                      borderRadius: '8px'\n                    }}\n                  />\n                  <div>\n                    <h4 style={{ margin: 0, color: '#333' }}>{product.title}</h4>\n                    <p style={{ margin: '0.5rem 0 0 0', color: '#666', fontSize: '0.9rem' }}>\n                      Click to select for try-on\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Right Column - Model Image Upload */}\n          <div>\n            <h3 style={{ marginBottom: '1rem', color: '#333' }}>2. Upload Your Photo</h3>\n            <div\n              onClick={() => fileInputRef.current?.click()}\n              style={{\n                border: '2px dashed #ddd',\n                borderRadius: '10px',\n                padding: '2rem',\n                textAlign: 'center',\n                cursor: 'pointer',\n                minHeight: '200px',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                background: modelImagePreview ? 'transparent' : '#fafafa'\n              }}\n            >\n              {modelImagePreview ? (\n                <div>\n                  <img \n                    src={modelImagePreview} \n                    alt=\"Model preview\"\n                    style={{\n                      maxWidth: '200px',\n                      maxHeight: '200px',\n                      objectFit: 'cover',\n                      borderRadius: '10px',\n                      marginBottom: '1rem'\n                    }}\n                  />\n                  <p style={{ color: '#666', margin: 0 }}>Click to change image</p>\n                </div>\n              ) : (\n                <div>\n                  <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>\uD83D\uDCF8</div>\n                  <p style={{ color: '#666', margin: 0 }}>Click to upload your photo</p>\n                  <p style={{ color: '#999', fontSize: '0.9rem', marginTop: '0.5rem' }}>\n                    Best results with front-facing photos\n                  </p>\n                </div>\n              )}\n            </div>\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleImageUpload}\n              style={{ display: 'none' }}\n            />\n          </div>\n        </div>\n\n        {/* Try-On Button */}\n        <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n          <button\n            onClick={handleTryOnSubmit}\n            disabled={!modelImage || !selectedProduct || isProcessing}\n            style={{\n              background: (!modelImage || !selectedProduct || isProcessing) \n                ? '#ccc' \n                : 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',\n              color: 'white',\n              border: 'none',\n              padding: '1rem 3rem',\n              borderRadius: '50px',\n              fontSize: '1.2rem',\n              fontWeight: 'bold',\n              cursor: (!modelImage || !selectedProduct || isProcessing) ? 'not-allowed' : 'pointer',\n              transition: 'all 0.2s',\n              boxShadow: '0 10px 20px rgba(245, 87, 108, 0.3)'\n            }}\n          >\n            {isProcessing ? '\uD83D\uDD04 Processing with ComfyUI...' : '\uD83D\uDE80 Generate Try-On'}\n          </button>\n        </div>\n\n        {/* Status Messages */}\n        {jobId && (\n          <div style={{\n            marginTop: '2rem',\n            padding: '1rem',\n            background: '#e8f5e8',\n            borderRadius: '10px',\n            textAlign: 'center'\n          }}>\n            <p style={{ margin: 0, color: '#2d5a2d' }}>\n              \u2705 Try-on job submitted! Job ID: {jobId}\n            </p>\n            <p style={{ margin: '0.5rem 0 0 0', color: '#666', fontSize: '0.9rem' }}>\n              ComfyUI workflow is processing your request on RunPod...\n            </p>\n          </div>\n        )}\n\n        {/* Technical Info */}\n        <div style={{\n          marginTop: '2rem',\n          padding: '1rem',\n          background: '#f8f9ff',\n          borderRadius: '10px',\n          fontSize: '0.9rem',\n          color: '#666'\n        }}>\n          <strong>\uD83D\uDD27 How it works:</strong> Your model image + selected dress \u2192 ComfyUI Workflow \u2192 RunPod Processing \u2192 AI Try-On Result\n        </div>\n      </div>\n    </div>\n  );\n}", "export default {'entry':{'module':'/build/entry.client-PLHDMDJB.js','imports':['/build/_shared/chunk-O4BRYNJ4.js','/build/_shared/chunk-XGOTYLZ5.js','/build/_shared/chunk-ODW4SEMK.js','/build/_shared/chunk-U5E2PCIK.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-U4FRFQSK.js','/build/_shared/chunk-7M6SC7J5.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-IGXN4ZU4.js','imports':['/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':true},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-INVIVFKG.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.tryon':{'id':'routes/api.tryon','parentId':'root','path':'api/tryon','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.tryon-AQPNPWKU.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/app.products':{'id':'routes/app.products','parentId':'root','path':'app/products','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.products-KJO557Y7.js','imports':['/build/_shared/chunk-LZ6DFBPK.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/app.try-on':{'id':'routes/app.try-on','parentId':'root','path':'app/try-on','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.try-on-JWVBUQYH.js','imports':['/build/_shared/chunk-LZ6DFBPK.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/products':{'id':'routes/products','parentId':'root','path':'products','index':undefined,'caseSensitive':undefined,'module':'/build/routes/products-SXXYLPOH.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/try-on':{'id':'routes/try-on','parentId':'root','path':'try-on','index':undefined,'caseSensitive':undefined,'module':'/build/routes/try-on-TVMCYXKN.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/webhooks':{'id':'routes/webhooks','parentId':'root','path':'webhooks','index':undefined,'caseSensitive':undefined,'module':'/build/routes/webhooks-YCEDH7MD.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'2cb4eaed','hmr':{'runtime':'/build/_shared/chunk-U5E2PCIK.js','timestamp':1758735626017},'url':'/build/manifest-2CB4EAED.js'};", "\nimport * as entryServer from \"/home/project/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/app.products.tsx\";\nimport * as route2 from \"./routes/app.try-on.tsx\";\nimport * as route3 from \"./routes/api.tryon.tsx\";\nimport * as route4 from \"./routes/products.tsx\";\nimport * as route5 from \"./routes/webhooks.tsx\";\nimport * as route6 from \"./routes/_index.tsx\";\nimport * as route7 from \"./routes/try-on.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"v3_routeConfig\":false,\"v3_singleFetch\":false,\"v3_lazyRouteDiscovery\":false,\"unstable_optimizeDeps\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/app.products\": {\n      id: \"routes/app.products\",\n      parentId: \"root\",\n      path: \"app/products\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/app.try-on\": {\n      id: \"routes/app.try-on\",\n      parentId: \"root\",\n      path: \"app/try-on\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/api.tryon\": {\n      id: \"routes/api.tryon\",\n      parentId: \"root\",\n      path: \"api/tryon\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/products\": {\n      id: \"routes/products\",\n      parentId: \"root\",\n      path: \"products\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/webhooks\": {\n      id: \"routes/webhooks\",\n      parentId: \"root\",\n      path: \"webhooks\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/try-on\": {\n      id: \"routes/try-on\",\n      parentId: \"root\",\n      path: \"try-on\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    }\n  };"],
  "mappings": "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",
  "names": ["ids", "db", "jsxDEV", "loader", "json", "jsxDEV", "loader", "json", "loader", "json", "useLoaderData", "Page", "Layout", "Text", "Card", "Button", "BlockStack", "Box", "Badge", "TitleBar", "jsxDEV", "loader", "json", "useLoaderData", "Page", "TitleBar", "Layout", "Card", "BlockStack", "Text", "Badge", "Box", "Button", "loader", "json", "json", "loader", "Products", "jsxDEV", "action", "action", "loader", "json", "useLoaderData", "Link", "jsxDEV", "TryOnStudio", "useState", "useRef", "Link", "jsxDEV"]
}
